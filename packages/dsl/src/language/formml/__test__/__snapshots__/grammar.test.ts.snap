// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`formml grammar > simple fields > primitives 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "type": "num",
        "name": "numberField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "decimal",
        "name": "decimalField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "text",
        "name": "textField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "bool",
        "name": "boolField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "datetime",
        "name": "datetimeField",
        "annotations": []
      }
    ]
  }
}"
`;

exports[`formml grammar > syntax > comments 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "Example",
    "fields": [
      {
        "$type": "Field",
        "type": "num",
        "name": "numberField",
        "annotations": []
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > boolean - "false" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "BoolLiteral",
                  "value": false
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > boolean - "true" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "BoolLiteral",
                  "value": true
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > null 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NullLiteral"
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "-123" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": -123
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "-123.456" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": -123.456
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "0" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 0
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "123" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 123
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "123.456" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 123.456
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > string - "double quotes" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "TextLiteral",
                  "value": "double quotes"
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > string - "escape \\' \\" \\\\ \\n \\t" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "TextLiteral",
                  "value": "escape ' \\" \\\\ \\n \\t"
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > string - 'escape \\' \\" \\\\ \\n \\t' 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "TextLiteral",
                  "value": "escape ' \\" \\\\ \\n \\t"
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > argument type > JS-like literals > string - 'single quotes' 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "TextLiteral",
                  "value": "single quotes"
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@5"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > mixes positional and named arguments 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              },
              {
                "$type": "NamedArgument",
                "name": "max",
                "value": {
                  "$type": "NumLiteral",
                  "value": 20
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@4"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > named arguments > allows trailing comma 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "NamedArgument",
                "name": "min",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              },
              {
                "$type": "NamedArgument",
                "name": "max",
                "value": {
                  "$type": "NumLiteral",
                  "value": 20
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@4"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > named arguments > multiple arguments 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "NamedArgument",
                "name": "min",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              },
              {
                "$type": "NamedArgument",
                "name": "max",
                "value": {
                  "$type": "NumLiteral",
                  "value": 20
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@4"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > named arguments > multiple arguments with any order 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "NamedArgument",
                "name": "max",
                "value": {
                  "$type": "NumLiteral",
                  "value": 20
                }
              },
              {
                "$type": "NamedArgument",
                "name": "min",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@4"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > named arguments > one argument 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "NamedArgument",
                "name": "value",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@3"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > positional arguments > allows trailing comma 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              },
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 20
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@4"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > positional arguments > multiple arguments 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              },
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 20
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@4"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > annotation with arguments > positional arguments > one argument 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "PositionalArgument",
                "value": {
                  "$type": "NumLiteral",
                  "value": 10
                }
              }
            ],
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@3"
            }
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > non-argument annotation > annotation with parentheses 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@0"
            },
            "args": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > non-argument annotation > multiple annotations 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@1"
            },
            "args": []
          },
          {
            "$type": "Annotation",
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@2"
            },
            "args": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > non-argument annotation > multiple lines 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@0"
            },
            "args": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`formml grammar > validation annotations > non-argument annotation > one line 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "call": {
              "$ref": "file:///builtin-annotations.d.formml#/declarations@0"
            },
            "args": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;
