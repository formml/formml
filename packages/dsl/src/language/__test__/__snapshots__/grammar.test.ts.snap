// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`grammar > simple fields > primitives 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "type": "num",
        "name": "numberField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "decimal",
        "name": "decimalField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "text",
        "name": "textField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "bool",
        "name": "boolField",
        "annotations": []
      },
      {
        "$type": "Field",
        "type": "datetime",
        "name": "datetimeField",
        "annotations": []
      }
    ]
  }
}"
`;

exports[`grammar > syntax > comments 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "Example",
    "fields": [
      {
        "$type": "Field",
        "type": "num",
        "name": "numberField",
        "annotations": []
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > boolean - "false" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Boolean",
                "value": false
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > boolean - "true" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Boolean",
                "value": true
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > null 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Null"
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "-123" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": -123
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "-123.456" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": -123.456
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "0" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": 0
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "123" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": 123
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > number - "123.456" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": 123.456
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > string - "'single quotes'" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "SQString",
                "value": "'single quotes'"
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > argument type > JS-like literals > string - "\\"double quotes\\"" 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "DQString",
                "value": "\\"double quotes\\""
              }
            ],
            "name": "any",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > named arguments > one argument 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "namedArgs": [
              {
                "$type": "NamedArgument",
                "name": "value",
                "value": {
                  "$type": "Number_",
                  "value": 10
                }
              }
            ],
            "name": "min",
            "args": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > positional arguments > allows trailing comma 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": 10
              },
              {
                "$type": "Number_",
                "value": 20
              }
            ],
            "name": "range",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > positional arguments > multiple arguments 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": 10
              },
              {
                "$type": "Number_",
                "value": 20
              }
            ],
            "name": "range",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > annotation with arguments > positional arguments > one argument 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "args": [
              {
                "$type": "Number_",
                "value": 10
              }
            ],
            "name": "min",
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > non-argument annotation > annotation with parentheses 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "name": "required",
            "args": [],
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > non-argument annotation > multiple annotations 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "name": "required1",
            "args": [],
            "namedArgs": []
          },
          {
            "$type": "Annotation",
            "name": "required2",
            "args": [],
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > non-argument annotation > multiple lines 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "name": "required",
            "args": [],
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;

exports[`grammar > validation annotations > non-argument annotation > one line 1`] = `
"{
  "$type": "FormMLSchema",
  "form": {
    "$type": "Form",
    "name": "ExampleForm",
    "fields": [
      {
        "$type": "Field",
        "annotations": [
          {
            "$type": "Annotation",
            "name": "required",
            "args": [],
            "namedArgs": []
          }
        ],
        "type": "num",
        "name": "numberField"
      }
    ]
  }
}"
`;
