fun required(message?: text) // TODO: Annotation return type, requiring union type, completion and validation

// TODO: function overloading

// text only validations

fun base64(message?: text)
fun bic(message?: text)
fun bytes(requirement: num, message?: text)
fun creditCard(message?: text)
fun cuid2(message?: text)
fun digits(message?: text)
fun email(message?: text)
fun emoji(message?: text)
fun empty(message?: text)
fun endsWith(requirement: text, message?: text)
fun excludes(requirement: text, message?: text)
fun hexadecimal(message?: text)
fun hexColor(message?: text)
fun imei(message?: text)
fun includes(requirement: text, message?: text)
fun ip(message?: text)
fun ipv4(message?: text)
fun ipv6(message?: text)
fun isoDate(message?: text)
fun isoDateTime(message?: text)
fun isoTime(message?: text)
fun isoTimeSecond(message?: text)
fun isoTimestamp(message?: text)
fun isoWeek(message?: text)
fun length(requirement: num, message?: text)
fun mac(message?: text)
fun mac48(message?: text)
fun mac64(message?: text)
fun maxBytes(requirement: num, message?: text)
fun maxLength(requirement: num, message?: text)
fun minBytes(requirement: num, message?: text)
fun minLength(requirement: num, message?: text)
fun nanoid(message?: text)
fun notBytes(requirement: num, message?: text)
fun notLength(requirement: num, message?: text)
fun octal(message?: text)
fun regex(requirement: text, message?: text)
fun startsWith(requirement: text, message?: text)
fun ulid(message?: text)
fun url(message?: text)
fun uuid(message?: text)
