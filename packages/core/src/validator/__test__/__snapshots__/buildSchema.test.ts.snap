// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`buildSchema > for field > integration > types - bool > should invalidate non-boolean input if field type is bool 1`] = `
[
  {
    "abortEarly": undefined,
    "abortPipeEarly": undefined,
    "expected": "boolean",
    "input": "abc",
    "issues": undefined,
    "kind": "schema",
    "lang": undefined,
    "message": "Invalid type: Expected boolean but received "abc"",
    "path": undefined,
    "received": ""abc"",
    "requirement": undefined,
    "type": "boolean",
  },
]
`;

exports[`buildSchema > for field > integration > types - datetime > should invalidate non-Date input if field type is datetime 1`] = `
[
  {
    "abortEarly": undefined,
    "abortPipeEarly": undefined,
    "expected": "Date",
    "input": "2024-01-01T00:00:00.000Z",
    "issues": undefined,
    "kind": "schema",
    "lang": undefined,
    "message": "Invalid type: Expected Date but received M",
    "path": undefined,
    "received": "M",
    "requirement": undefined,
    "type": "date",
  },
]
`;

exports[`buildSchema > for field > integration > types - decimal > should invalidate non-BigNumber input if field type is decimal 1`] = `
[
  {
    "abortEarly": undefined,
    "abortPipeEarly": undefined,
    "expected": "BigNumber",
    "input": 123.45,
    "issues": undefined,
    "kind": "schema",
    "lang": undefined,
    "message": "Invalid type: Expected BigNumber but received 123.45",
    "path": undefined,
    "received": "123.45",
    "requirement": undefined,
    "type": "instance",
  },
]
`;

exports[`buildSchema > for field > integration > types - num > should invalidate non-number input if field type is num 1`] = `
[
  {
    "abortEarly": undefined,
    "abortPipeEarly": undefined,
    "expected": "number",
    "input": "abc",
    "issues": undefined,
    "kind": "schema",
    "lang": undefined,
    "message": "Invalid type: Expected number but received "abc"",
    "path": undefined,
    "received": ""abc"",
    "requirement": undefined,
    "type": "number",
  },
]
`;

exports[`buildSchema > for field > integration > types - text > should invalidate non-string input if field type is text 1`] = `
[
  {
    "abortEarly": undefined,
    "abortPipeEarly": undefined,
    "expected": "string",
    "input": 123,
    "issues": undefined,
    "kind": "schema",
    "lang": undefined,
    "message": "Invalid type: Expected string but received 123",
    "path": undefined,
    "received": "123",
    "requirement": undefined,
    "type": "string",
  },
]
`;
